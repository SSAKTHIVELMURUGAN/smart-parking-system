#include <WiFi.h>
#include <HTTPClient.h>

const char* ssid = "Yogi";       // Your exact Hotspot SSID (case-sensitive)
const char* password = "111222333"; // Your exact Hotspot password
const char* serverURL = "http://*********/update_sensor";

// Define IR Sensor GPIO pins
#define IR_SENSOR_1 33  // Slot A1
#define IR_SENSOR_2 32  // Slot A2
#define IR_SENSOR_3 25  // Slot B1

// Corresponding parking slots
String slot_1 = "A1";
String slot_2 = "A2";
String slot_3 = "B1";

WiFiClient client;
HTTPClient http;

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);

    Serial.print("Connecting to Wi-Fi");
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.print(".");
    }
    Serial.println(" Connected!");

    pinMode(IR_SENSOR_1, INPUT);
    pinMode(IR_SENSOR_2, INPUT);
    pinMode(IR_SENSOR_3, INPUT);
}

void sendSensorData(String slot, int status) {
    if (WiFi.status() == WL_CONNECTED) {
        http.begin(client, serverURL);
        http.addHeader("Content-Type", "application/json");

        // Create JSON payload
        String payload = "{\"slot_name\": \"" + slot + "\", \"status\": " + String(status) + "}";
        
        int httpResponseCode = http.POST(payload);  // Send POST request
        Serial.print("HTTP Response for ");
        Serial.print(slot);
        Serial.print(": ");
        Serial.println(httpResponseCode);

        http.end();  // Close connection
    } else {
        Serial.println("WiFi Disconnected!");
    }
}

void loop() {
    int sensor_1_status = digitalRead(IR_SENSOR_1);  // Read Sensor 1
    int sensor_2_status = digitalRead(IR_SENSOR_2);  // Read Sensor 2
    int sensor_3_status = digitalRead(IR_SENSOR_3);  // Read Sensor 3

    Serial.print("A1 Status: ");
    Serial.println(sensor_1_status);
    Serial.print("A2 Status: ");
    Serial.println(sensor_2_status);
    Serial.print("B1 Status: ");
    Serial.println(sensor_3_status);

    // Send each sensor's data to Flask
    sendSensorData(slot_1, sensor_1_status);
    sendSensorData(slot_2, sensor_2_status);
    sendSensorData(slot_3, sensor_3_status);

    delay(2000);  // Send data every 2 seconds
}
